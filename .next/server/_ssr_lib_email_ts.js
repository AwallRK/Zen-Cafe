"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_ssr_lib_email_ts";
exports.ids = ["_ssr_lib_email_ts"];
exports.modules = {

/***/ "(ssr)/./lib/email.ts":
/*!**********************!*\
  !*** ./lib/email.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendContactEmail: () => (/* binding */ sendContactEmail),\n/* harmony export */   sendOrderEmail: () => (/* binding */ sendOrderEmail)\n/* harmony export */ });\n/* harmony import */ var emailjs_com__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! emailjs-com */ \"(ssr)/./node_modules/emailjs-com/es/index.js\");\n// Email service utilities (EmailJS integration)\n\nasync function sendOrderEmail({ customer_name, customer_email, order_id, order_date, order_items, subtotal_formatted, shipping_formatted, total_formatted, shipping_address_line_1, shipping_address_line_2, shipping_city, shipping_prefecture, shipping_postal, orderType, email }) {\n    const serviceID = \"service_7v2bq6u\" || 0;\n    const templateID = \"template_qtqdako\" || 0;\n    const userID = \"2-bi1oZAXR9r0mfag\" || 0;\n    console.log('EmailJS User ID:', userID);\n    console.log('EmailJS Service ID:', serviceID);\n    console.log('EmailJS Template ID:', templateID);\n    // Generate HTML for order items\n    let orderItemsHtml = '';\n    order_items.forEach((item)=>{\n        orderItemsHtml += `\n        <tr>\n            <td style=\"padding: 12px; border-bottom: 1px solid #dcd8c4;\">\n                ${item.name} (x${item.quantity})\n            </td>\n            <td style=\"text-align: right; padding: 12px; border-bottom: 1px solid #dcd8c4;\">\n                ${item.price}\n            </td>\n        </tr>\n        `;\n    });\n    // Compose city/postal string\n    const cityPostal = [\n        shipping_city,\n        shipping_prefecture,\n        shipping_postal\n    ].filter(Boolean).join(', ');\n    // Set default values for pickup\n    const addressLine1 = shipping_address_line_1 || \"Pick in store\";\n    const addressLine2 = shipping_address_line_2 || \"Pick in store\";\n    const cityPostalFinal = orderType === 'pickup' ? '' : cityPostal;\n    const templateParams = {\n        customer_name,\n        customer_email,\n        order_id,\n        order_date,\n        order_items_html: orderItemsHtml,\n        subtotal_formatted,\n        shipping_formatted,\n        total_formatted,\n        shipping_address_line_1: addressLine1,\n        shipping_address_line_2: addressLine2,\n        shipping_city_postal: cityPostalFinal,\n        email: customer_email\n    };\n    try {\n        const result = await emailjs_com__WEBPACK_IMPORTED_MODULE_0__[\"default\"].send(serviceID, templateID, templateParams, userID);\n        return result;\n    } catch (err) {\n        throw err;\n    }\n}\nasync function sendContactEmail({ firstName, lastName, email, subject, message }) {\n    const serviceID = \"service_7v2bq6u\" || 0;\n    const templateID = \"template_kglrt9s\" || 0;\n    const userID = \"2-bi1oZAXR9r0mfag\" || 0;\n    const templateParams = {\n        firstName,\n        email,\n        subject,\n        message\n    };\n    try {\n        const result = await emailjs_com__WEBPACK_IMPORTED_MODULE_0__[\"default\"].send(serviceID, templateID, templateParams, userID);\n        return result;\n    } catch (err) {\n        throw err;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./lib/email.ts\n");

/***/ })

};
;